<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dutchakdev]]></title>
  <link href="http://dutchakdev.github.io/atom.xml" rel="self"/>
  <link href="http://dutchakdev.github.io/"/>
  <updated>2014-07-20T15:24:59+03:00</updated>
  <id>http://dutchakdev.github.io/</id>
  <author>
    <name><![CDATA[Roman Dutchak]]></name>
    <email><![CDATA[dutchakdev@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Пакетная обработка данных для AR YII]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/07/20/yii-batch/"/>
    <updated>2014-07-20T11:16:48+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/07/20/yii-batch</id>
    <content type="html"><![CDATA[<p>Хотел немного поиграться и посмотреть что выйдет. В yii2 есть такая крутая мега фича как batch и each.
Юзается они так:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">use</span> <span class="nx">yii\db\Query</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$query</span> <span class="o">=</span> <span class="p">(</span><span class="k">new</span> <span class="nx">Query</span><span class="p">)</span>
</span><span class='line'>    <span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;tbl_user&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$query</span><span class="o">-&gt;</span><span class="na">each</span><span class="p">()</span> <span class="k">as</span> <span class="nv">$user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// $user — одна строка из tbl_user</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$query</span><span class="o">-&gt;</span><span class="na">batch</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$users</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// $users — массив из 10 строк</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Конечно так красиво сделать не выйдет, да и вообще, не выйдет повторить всю суть,
без значительных изминений в AR (новый, для версии 2 команда yii писала 2 года)
но поигратся было интересно.</p>

<p>Посмотреть что получилось можно тут: <a href="https://github.com/dutchakdev/yii-batch">https://github.com/dutchakdev/yii-batch</a>
Репозиторий еще не дооформил, нужно написать пару тестов и пример использования
в демо проекте.</p>

<p>Сам компонент (хоть он и больше хелпер-итератор) находится тут
<a href="https://github.com/dutchakdev/yii-batch/blob/master/protected/components/Batch.php">https://github.com/dutchakdev/yii-batch/blob/master/protected/components/Batch.php</a></p>

<p>Вышло у мен так:</p>

<p>Batch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// Вытягиваем по 10 штук из базы, когда мы их все проходим, догружаем еще 10</span>
</span><span class='line'><span class="k">foreach</span><span class="p">((</span><span class="k">new</span> <span class="nx">\Batch</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="nx">\user\models\User</span><span class="o">::</span><span class="na">model</span><span class="p">()))</span><span class="o">-&gt;</span><span class="na">findAll</span><span class="p">(</span><span class="nv">$criteria</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$item</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">// В $item находится 10 обьектов</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Each:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// Вытягиваем по 10 штук из базы, когда мы их все проходим, догружаем еще 10 отдельным запросом</span>
</span><span class='line'><span class="k">foreach</span><span class="p">((</span><span class="k">new</span> <span class="nx">\Batch</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="nx">\user\models\User</span><span class="o">::</span><span class="na">model</span><span class="p">(),</span> <span class="k">true</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">findAll</span><span class="p">(</span><span class="nv">$criteria</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$item</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">// В $item находится 1 обьект</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Штука работает довольно медленно за счет того что делает несколько запросов к базе, но память экономит значительно.
Сравнивая с обычным findAll из AR, который 3400 моих записей из реального проекта сожрал 94.5 mb в то время когда
batch держал уровен в районе 18.5-19.5 mb (учитывая что batchSize, размер пакета, был равен 100).</p>

<p>Если немного допилить AR для этих дел можно добится в уменьшения в раза два, но я пока не стал заморачиватся
так как интерес был не в том.</p>

<p>Заключение
Получилось не плохо, хоть и мало применимо. Для данных большого размера априори плохо юзать AR, в
yii2 ситуация улучшилась в разы (переключатель массив/обьект, перепиленый AR в котором гараздо удобней управлять данными).
Но иногда бывают ситуации когда можно себе позволить использовать обьект AR для выборки и в несколько запросов, к примеру отчетов или выгрузки
плоских таблиц. Во всяком случае это мой маленький эксперимент которым я хочу поделится.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yii 2.0 Beta]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/14/yii2-beta/"/>
    <updated>2014-04-14T21:20:48+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/14/yii2-beta</id>
    <content type="html"><![CDATA[<p>Свершилось! Появилась на свет beta второй вресии замечательного фреймворка Yii (Йии!)</p>

<p>Загрузить ее можно с <a href="http://www.yiiframework.com/download/">официального сайта фреймворка</a></p>

<!-- more -->


<h4>Часто задаваемые вопросы</h4>

<ul>
<li>Что значит бета? Бета означает стабильные набор возможностей и архитектуру. Начиная с беты и до GA (General Availability, стабильного релиза), мы будем заниматься, в основном, исправлением ошибок и документацией. Мы не собираемся изменять архитектуру фреймворка или добавлять какие-либо новые возможности. Стоит отметить, что поломки обратной совместимости всё ещё могут случаться, но мы попытаемся делать их как можно меньше, а сделанные детально описывать.</li>
<li>Когда будет стабильный релиз? Пока что мы не можем назвать точную дату. Так как следующий этап заключается, главным образом, в исправлении ошибок и доработке документации, мы думаем, что сильно много времени это не займёт.</li>
<li>Могу ли я использовать бету в моих проектах? Не стоит использовать бету в проектах с сжатыми сроками или если вы ещё не знакомы с Yii 2.0. Если это не про вас и вас не пугают изменения в фреймворке, можете попробовать. Мы слышали, что довольно много проектов уже запущены и работают на ветке <code>master</code>. Также помните, что минимальная версия PHP для работы фреймворка — 5.4.</li>
<li>Есть ли документация по 2.0? Да, есть The Definitive Guide и API documentation. Гайд постоянно дополняется. Перевод на русский будет как только оригинал будет более-менее завершён.</li>
<li>Как мне обновить приложения с 1.1 на 2.0? На эту тему написан отдельнй раздел</li>
<li>Upgrading from Yii 1.1. Стоит отметить, что так как 2.0 переписан полностью, обновление не будет тривиальной задачей. Тем не менее, если вы работали с 1.1, вам будет намного проще потому как между 1.1 и 2.0 много общего.</li>
<li>Как обновиться с альфы 2.0? Если вы обновляете альфу через Composer, стоит удалить всё, кроме .gitignore из директории vendor и запустить composer ещё раз. Сделать это необходимо лишь один раз и вам не придётся так поступать с каждым новым релизом. Полный список изменений, в том чисте и ломающих обратную совместимость, доступен в файле CHANGELOG.</li>
<li>Как следить за разработкой 2.0? Вся разработка и обсуждения происходят на GitHub:</li>
<li><a href="https://github.com/yiisoft/yii2.">https://github.com/yiisoft/yii2.</a> Вы можете подписаться на обновления или поставить звёздочку чтобы получать уведомления об обновлениях. Также можно следить за нашим twitter <a href="https://twitter.com/yiiframework.">https://twitter.com/yiiframework.</a></li>
</ul>


<p><a href="https://github.com/yiisoft/yii2/blob/master/framework/CHANGELOG.md">CHANGELOG</a></p>

<p>Еще с альфы успел поюзать его, скоро напишу подробный обзор фреймворка и свои впечатления.</p>

<p><a href="http://habrahabr.ru/post/219329/">Оригинал</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Обзор Benchmark Tools]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/14/benchmark/"/>
    <updated>2014-04-14T12:06:21+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/14/benchmark</id>
    <content type="html"><![CDATA[<p>Решил рассказать о тулзах для тестирования нагрузки которые я использую в работе.
Сейчас конкретно пойдет речь о измерении производительности HTTP веб-серверов.
Это не совсем обзор, скорее поверхносный, и представлю лишь 3 тулзы.</p>

<!-- more -->


<h3>AB</h3>

<p>Однопоточная программа для командной строки, использующаяся для измерения производительности HTTP веб-серверов.
Изначально разработанная для тестирования HTTP-сервера Apache, в основном подходит для тестирования любого веб-сервера.</p>

<p>Если нужен простой тест по нагрузке определенной страницы (или списка) достаточно использовать ее.</p>

<p>Использование:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ab -n 1000 -c 10 http://domain.com/</span></code></pre></td></tr></table></div></figure>


<p>Сделает 1000 HTTP GET запросов, обработка до 10 запросов одновременно, к указанному URL.</p>

<p>Получим примерно такой отчетик:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Server Software:        nginx
</span><span class='line'>Server Hostname:        domain.com
</span><span class='line'>Server Port:            80
</span><span class='line'>
</span><span class='line'>Document Path:          /
</span><span class='line'>Document Length:        5 bytes
</span><span class='line'>
</span><span class='line'>Concurrency Level:      10
</span><span class='line'>Time taken for tests:   26.134 seconds
</span><span class='line'>Complete requests:      1000
</span><span class='line'>Failed requests:        0
</span><span class='line'>Write errors:           0
</span><span class='line'>Total transferred:      146000 bytes
</span><span class='line'>HTML transferred:       5000 bytes
</span><span class='line'>Requests per second:    38.26 [#/sec] (mean)
</span><span class='line'>Time per request:       261.342 [ms] (mean)
</span><span class='line'>Time per request:       26.134 [ms] (mean, across all concurrent requests)
</span><span class='line'>Transfer rate:          5.46 [Kbytes/sec] received
</span><span class='line'>
</span><span class='line'>Connection Times (ms)
</span><span class='line'>              min  mean[+/-sd] median   max
</span><span class='line'>Connect:      111  141 175.4    115    2328
</span><span class='line'>Processing:   112  118  29.8    116     598
</span><span class='line'>Waiting:      112  117   3.0    116     130
</span><span class='line'>Total:        223  259 178.0    232    2445
</span><span class='line'>
</span><span class='line'>Percentage of the requests served within a certain time (ms)
</span><span class='line'>  50%    232
</span><span class='line'>  66%    234
</span><span class='line'>  75%    235
</span><span class='line'>  80%    236
</span><span class='line'>  90%    240
</span><span class='line'>  95%    243
</span><span class='line'>  98%   1299
</span><span class='line'>  99%   1367
</span><span class='line'> 100%   2445 (longest request)</span></code></pre></td></tr></table></div></figure>


<h3>Siege</h3>

<p>Siege умеет выполнять многопоточное нагрузочное тестирование web-серверов по протоколу HTTP (S)/1.0/1.1 методами GET и POST.
Утилита симулирует параллельные запросы к веб-серверу на протяжении заданного времени и в конце теста вычисляет следующие показатели:</p>

<ul>
<li>среднее количество транзакций, которые сервер смог обрабатывать одновременно.</li>
<li>среднее время, потребовавшееся серверу для ответа;</li>
<li>среднее количество транзакций в секунду;</li>
<li>длительность самой долгой и самой быстрой транзакций;</li>
<li>объём переданных данных и скорость обмена данными с сервером;</li>
<li>количество совершённых транзакций в процессе тестирования;</li>
<li>количество и процентное соотношение успешных/неудачных транзакций;</li>
</ul>


<p>Запросы к серверу утилита может выполнять как к одному и тому же URL,
так к разным на основе списка.
Паузы между запросами к серверу могут быть как произвольными в пределах заданного интервала, так и вовсе отсутствовать, позволяя таким образом выполнять тест производительности сервера.</p>

<p>Главное отличие от <code>ab</code> это какразтаки умени &ldquo;симулировать&rdquo; реальное поведение при highload.</p>

<p>Выполним запрос 1000 раз, только теперь одновременно будем отправлять по 10 запросов за раз:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ siege -b -c 10 -r 5 http://domain.com/</span></code></pre></td></tr></table></div></figure>


<p>Если необходимо использовать список url:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ siege -d 5 -c 200 -r 5 -i -f ~/urls.txt</span></code></pre></td></tr></table></div></figure>


<p>Результат будет таким:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Transactions:                  50 hits
</span><span class='line'>Availability:             100.00 %
</span><span class='line'>Elapsed time:             1.01 secs
</span><span class='line'>Data transferred:         0.27 MB
</span><span class='line'>Response time:                 0.12 secs
</span><span class='line'>Transaction rate:         49.50 trans/sec
</span><span class='line'>Throughput:                   0.26 MB/sec
</span><span class='line'>Concurrency:              5.84
</span><span class='line'>Successful transactions:       50
</span><span class='line'>Failed transactions:         0
</span><span class='line'>Longest transaction:         0.74
</span><span class='line'>Shortest transaction:       0.06
</span><span class='line'>
</span><span class='line'>FILE: /usr/local/var/siege.log
</span><span class='line'>You can disable this annoying message by editing
</span><span class='line'>the .siegerc file in your home directory; change
</span><span class='line'>the directive 'show-logfile' to false.
</span><span class='line'>
</span><span class='line'>$ cat /usr/local/var/siege.log
</span><span class='line'>Date & Time            Trans       Elap Time       Data Trans   Resp Time   Trans Rate    Throughput   Concurrent     OKAY     Failed
</span><span class='line'>2014-03-30 16:10:01,  2145,       38.05,          0,          0.27,       56.37,        0.00,        14.94,        2145,       0
</span><span class='line'>2014-03-30 16:10:33,  187,        21.97,          0,          0.29,       8.51,         0.00,        2.50,        187,        0
</span><span class='line'>2014-03-30 16:13:50,  1030,       109.48,         0,          0.27,       9.41,         0.00,        2.50,          1030,       0
</span><span class='line'>2014-03-31 10:03:01,  1038,    15.97,          2,         0.98,       65.00,        0.13,        63.40,        1038,       0
</span><span class='line'>2014-03-31 10:03:40,     63,         33.14,          0,        18.24,      1.90,         0.00,        34.68,      63,         37
</span><span class='line'>2014-04-14 19:22:07,     50,         1.01,           0,           0.12,       49.50,        0.00,        5.84,        50,         0
</span></code></pre></td></tr></table></div></figure>


<h3>iperf</h3>

<p>Мощнейшая кроссплатформенная консольная утилита генерирования трафика.
С ее помощью можно легко измерить пропускную способность канала между двумя компьютерами. Iperf работает в режиме клиент-сервер.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Usage
</span><span class='line'>$ iperf -c &lt;server IP address&gt; -b 36M -i 1 -t 20</span></code></pre></td></tr></table></div></figure>


<p>Для данной утилиты есть так же gui интерфейс <code>Jperf</code></p>

<p>Для тестирования конкретно http серверов я использую связку siege + ab, потом делаю срезы по конкретно интересующим данным.</p>

<p>Если тема будет интересна, раскажу еще других штуках для пентестов.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Установка Metasploit Framework на OS X]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/12/installing-metasploit-framewok/"/>
    <updated>2014-04-12T14:56:15+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/12/installing-metasploit-framewok</id>
    <content type="html"><![CDATA[<p>Очень упрощает жизнь штука под названием <a href="https://github.com/darkoperator/MSF-Installer">MSF Installer</a>
Это простой скрипт который установит все зависимости и сам фреймворк.</p>

<!-- more -->


<p>Перед запуском нужно убедится в том что установлены</p>

<ul>
<li><a href="https://java.com/en/download/installed.jsp">java</a></li>
<li><a href="http://brew.sh">homebrew</a></li>
<li>Command Line Development Tools</li>
</ul>


<p>Установка мега простая:</p>

<figure class='code'><figcaption><span>Run - msf_install.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">$</span> <span class="s">chmod</span> <span class="s">+x</span> <span class="s">msf_install.sh</span>
</span><span class='line'>$ <span class="s">./msf_install.sh</span> <span class="s">-i</span>
</span></code></pre></td></tr></table></div></figure>


<p>После чего запускаем скрипт установки и обновления Armitage</p>

<figure class='code'><figcaption><span>Run - msf_install.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">$</span> <span class="s">chmod</span> <span class="s">+x</span> <span class="s">msf_install.sh</span>
</span><span class='line'>$ <span class="s">./update_armitage.sh</span>
</span></code></pre></td></tr></table></div></figure>


<p>Все гениальное &ndash; просто!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UA IRC]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/12/ua-irc/"/>
    <updated>2014-04-12T13:49:52+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/12/ua-irc</id>
    <content type="html"><![CDATA[<p>Создал канал #dou на freenode.net.</p>

<!-- more -->


<p>Клиенты:</p>

<pre><code>IRC клиенты для MacOS
http://www.codeux.com/textual/ - Использую, мне нравится
http://limechat.net/mac/
http://quassel-irc.org/downloads

Linux
http://xchat.org/

IRC клиенты для Windows
http://www.mirc.com/
http://www.silverex.org/download/
http://quassel-irc.org/downloads

Chrome
https://chrome.google.com/webstore/detail/chrocha-irc-client-for-ch/eoajgjnmcikichkdpkjkpgoejkglinbd
https://chrome.google.com/webstore/detail/mibbit-webchat/hbadbkkklnhamjjeagmknajgmbgcmnpi?hl=en-GB

Firefox
https://addons.mozilla.org/en-US/firefox/addon/chatzilla/
https://addons.mozilla.org/en-US/firefox/addon/freenode-irc-client/?src=search

Android
https://play.google.com/store/apps/details?id=com.androirc&amp;hl=ru

iOS
https://itunes.apple.com/us/app/mango-lite-free-irc-chat-client/id449136259?mt=8
https://itunes.apple.com/ru/app/dump-chat-irc-client/id647483432?mt=8
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs - С чего начать?]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/12/nodejs-s-chiegho-nachat%27/"/>
    <updated>2014-04-12T00:52:38+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/12/nodejs-s-chiegho-nachat&#8217;</id>
    <content type="html"><![CDATA[<p><img src="http://dutchakdev.github.io/images/nodejs.svg" style="background-color: black;padding: 20px;"></p>

<p>Не давно начал изучать nodejs, и тут для себя нашел подборочку ссылочек.</p>

<!-- more -->


<ul>
<li><a href="http://nodejs.org/">NodeJS.org</a></li>
<li><a href="http://www.nodebeginner.ru/">Туториал, то что нужно прочитать в первую очередь</a></li>
<li><a href="http://nodeguide.ru/doc/">Еще руководство</a></li>
<li><a href="https://www.meteor.com/">Meteorjs &ndash; Быстрый фреймворк с низким порогом входа, получивший 11 милионов инвестиций</a></li>
<li><a href="https://www.discovermeteor.com/">Книга по meteorjs</a> (платная)</li>
<li><a href="http://expressjs.com/api.html">Express &ndash; MVC фреймверк node.js</a></li>
<li>Уроки по express: <a href="http://code.tutsplus.com/tutorials/introduction-to-express--net-33367">Раз</a>, <a href="http://code.tutsplus.com/tutorials/build-a-complete-mvc-web-site-with-expressjs--net-34168">Два</a>, <a href="http://webapplog.com/intro-to-express-js-simple-rest-api-app-with-monk-and-mongodb/">Три</a></li>
<li><a href="http://learn.javascript.ru/nodejs-screencast">NodeJS от А до Я</a></li>
<li><a href="http://howtonode.org/">Просто полезный линк</a></li>
<li><a href="http://debuggable.com/blog">Еще бложик</a></li>
</ul>


<p>Буду похду дела пополнять коллекцию, так же на днях еще сделаю подборочку по <code>RoR</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3d Design]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/11/3d-design/"/>
    <updated>2014-04-11T13:31:56+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/11/3d-design</id>
    <content type="html"><![CDATA[<p><a href="http://kristina-asmus-3d.narod.ru/">Я просто оставлю это сдесь</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Добавление нового домена в Nginx (скрипт)]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/11/dobavlieniie-novogho-domiena-v-nginx/"/>
    <updated>2014-04-11T10:09:39+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/11/dobavlieniie-novogho-domiena-v-nginx</id>
    <content type="html"><![CDATA[<p>Люблю писать <code>bash</code> скрипты, в них нет ничего сложного но при этом они могут решать довольно большие проблемы.
Такой вот скрипт стоит у меня для добавления домена в <code>nginx</code>, точнее скрипт создания конфига для домена.</p>

<figure class='code'><figcaption><span>Usage - nginx_domain.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ./nginx_domain.sh testdomain.com
</span></code></pre></td></tr></table></div></figure>




<!-- more -->




<figure class='code'><figcaption><span>nginx_domain.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="c1">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#config</span>
</span><span class='line'><span class="k">web_root=&#39;/usr/share/nginx/&#39;</span>
</span><span class='line'><span class="s">config_dir=&#39;/etc/nginx/&#39;</span>
</span><span class='line'><span class="s">hosts_file=&quot;/etc/hosts&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">if</span> <span class="s">[</span> <span class="s">-z</span> <span class="s">&quot;</span><span class="nv">$1&quot;</span> <span class="s">]</span>
</span><span class='line'><span class="s">then</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">#user input</span>
</span><span class='line'>        <span class="s">echo</span> <span class="s">-e</span> <span class="s">&quot;Enter</span> <span class="s">domain</span> <span class="s">name:&quot;</span>
</span><span class='line'>        <span class="s">read</span> <span class="s">DOMAIN</span>
</span><span class='line'>        <span class="s">echo</span> <span class="s">&quot;Creating</span> <span class="s">Nginx</span> <span class="s">domain</span> <span class="s">settings</span> <span class="s">for:</span> <span class="nv">$DOMAIN&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="s">if</span> <span class="s">[</span> <span class="s">-z</span> <span class="s">&quot;</span><span class="nv">$DOMAIN&quot;</span> <span class="s">]</span>
</span><span class='line'>        <span class="s">then</span>
</span><span class='line'>                <span class="s">echo</span> <span class="s">&quot;Domain</span> <span class="s">required&quot;</span>
</span><span class='line'>                <span class="s">exit</span> <span class="mi">1</span>
</span><span class='line'>        <span class="s">fi</span>
</span><span class='line'><span class="s">fi</span>
</span><span class='line'>
</span><span class='line'><span class="s">if</span> <span class="s">[</span> <span class="s">-z</span> <span class="s">&quot;</span><span class="nv">$DOMAIN&quot;</span> <span class="s">]</span>
</span><span class='line'><span class="s">then</span>
</span><span class='line'>        <span class="s">DOMAIN=</span><span class="nv">$1</span>
</span><span class='line'><span class="s">fi</span>
</span><span class='line'>
</span><span class='line'><span class="s">(</span>
</span><span class='line'><span class="s">cat</span> <span class="s">&lt;&lt;EOF</span>
</span><span class='line'><span class="s">server</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>      <span class="kn">server_name</span>  <span class="nv">$DOMAIN.</span> <span class="s">www.</span><span class="nv">$DOMAIN</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">root</span>        <span class="nv">$web_root/$DOMAIN/public/</span><span class="p">;</span>
</span><span class='line'>      <span class="kn">index</span>       <span class="s">index.php</span> <span class="s">index.html</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">charset</span> <span class="s">utf8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">location</span> <span class="p">=</span> <span class="s">/favicon.ico</span> <span class="p">{</span>
</span><span class='line'>              <span class="kn">log_not_found</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">access_log</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">location</span> <span class="p">=</span> <span class="s">/robots.txt</span> <span class="p">{</span>
</span><span class='line'>              <span class="kn">allow</span> <span class="s">all</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">log_not_found</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">access_log</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>          <span class="kn">try_files</span> <span class="nv">$uri</span> <span class="nv">$uri/</span> <span class="s">/index.php?</span><span class="nv">$query_string</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">location</span> <span class="p">~</span> <span class="sr">\.php</span> <span class="p">{</span>
</span><span class='line'>              <span class="kn">fastcgi_pass</span>  <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">9000</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">fastcgi_index</span> <span class="s">index.php</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">include</span> <span class="s">fastcgi_params</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">fastcgi_param</span>  <span class="s">PHP_VALUE</span> <span class="s">&quot;upload_max_filesize=15M&quot;</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">fastcgi_param</span>   <span class="s">APPLICATION_ENV</span>  <span class="s">dev</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">fastcgi_param</span> <span class="s">SCRIPT_FILENAME</span> <span class="nv">$document_root$fastcgi_script_name</span><span class="p">;</span>
</span><span class='line'>              <span class="kn">fastcgi_param</span> <span class="s">PATH_INFO</span> <span class="nv">$fastcgi_script_name</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kn">access_log</span> <span class="nv">$web_root/$DOMAIN/log/access_log.txt</span><span class="p">;</span>
</span><span class='line'>      <span class="kn">error_log</span> <span class="nv">$web_root/$DOMAIN/log/error_log.txt</span> <span class="s">error</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">EOF</span>
</span><span class='line'><span class="s">)</span> <span class="s">&gt;</span>  <span class="nv">$config_dir/sites-available/$DOMAIN.conf</span>
</span><span class='line'>
</span><span class='line'><span class="s">(</span>
</span><span class='line'><span class="s">cat</span> <span class="s">&lt;&lt;EOF</span>
</span><span class='line'><span class="mi">127</span><span class="s">.0.0.1</span> <span class="nv">$domain</span>
</span><span class='line'><span class="mi">127</span><span class="s">.0.0.1</span> <span class="s">www.</span><span class="nv">$domain</span>
</span><span class='line'><span class="s">EOF</span>
</span><span class='line'><span class="s">)</span> <span class="s">&gt;&gt;</span>  <span class="s">hosts_file</span>
</span><span class='line'>
</span><span class='line'><span class="s">echo</span> <span class="s">&quot;Making</span> <span class="s">web</span> <span class="s">directories&quot;</span>
</span><span class='line'><span class="s">mkdir</span> <span class="s">-p</span> <span class="nv">$web_root/&quot;$DOMAIN&quot;</span>
</span><span class='line'><span class="s">mkdir</span> <span class="s">-p</span> <span class="nv">$web_root/&quot;$DOMAIN&quot;/{public,private,log,backup}</span>
</span><span class='line'><span class="s">ln</span> <span class="s">-s</span> <span class="nv">$config_dir/sites-available/&quot;$DOMAIN&quot;.conf</span> <span class="nv">$config_dir/sites-enabled/&quot;$DOMAIN&quot;.conf</span>
</span><span class='line'><span class="s">/etc/init.d/nginx</span> <span class="s">reload</span>
</span><span class='line'><span class="s">echo</span> <span class="s">&quot;Nginx</span> <span class="s">-</span> <span class="s">reload&quot;</span>
</span><span class='line'><span class="s">chown</span> <span class="s">-R</span> <span class="s">www-data:www-data</span> <span class="nv">$web_root/&quot;$DOMAIN&quot;</span>
</span><span class='line'><span class="s">chmod</span> <span class="mi">755</span> <span class="nv">$web_root/&quot;$DOMAIN&quot;/public</span>
</span><span class='line'><span class="s">echo</span> <span class="s">&quot;Permissions</span> <span class="s">have</span> <span class="s">been</span> <span class="s">set&quot;</span>
</span><span class='line'><span class="s">echo</span> <span class="s">&quot;</span><span class="nv">$DOMAIN</span> <span class="s">has</span> <span class="s">been</span> <span class="s">setup&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Конечно, скрипт подойдет не всем, все зависит от того как установлен и настроен сервер, но подкорректировать довольно просто используя переменные конфигурации, ну и если вообще не подходит то подкорректировать сам скрипт,
так же можно задавать вопросы в коменты, всегда рад помочь.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/11/octopress/"/>
    <updated>2014-04-11T01:20:22+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/11/octopress</id>
    <content type="html"><![CDATA[<p>Не успел я создать очередной свой блог и уже переехал О_о
Вообще частенько люблю что-то кардинально менять в своей жизни,
темболее на то что давно уже заглядывался.</p>

<p>GHost не плохая блого-платформа, но честно говоря не доконца понял почему она сорвала такой
куш на кикстартере, ничего особенного, кроме того что он написан на <code>nodjs</code> &ndash; нет.
Полетаем пока на <code>octopress</code>, посмотрим, думаю на ней и останусь, в первую очередь из-за markdown.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X Mavericks + PPFMN]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/11/mac-os-x-mavericks-plus-ppfmn/"/>
    <updated>2014-04-11T00:14:20+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/11/mac-os-x-mavericks-plus-ppfmn</id>
    <content type="html"><![CDATA[<p>Норм статья, я тоже юзаю: <a href="http://habrahabr.ru/post/217245/">http://habrahabr.ru/post/217245/</a>
Для тех кто занимается порно и юзает ports, ребята &ndash; не страдайте хуйней, <a href="http://brew.sh/">http://brew.sh/</a> &ndash; решение для крутых чуваков.</p>

<p>Так же еще есть вариант установить сразу несколько версий php:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">brew</span> <span class="s">update</span>
</span><span class='line'><span class="s">brew</span> <span class="s">upgrade</span>
</span><span class='line'><span class="s">brew</span> <span class="s">tap</span> <span class="s">homebrew/dupes</span>
</span><span class='line'><span class="s">brew</span> <span class="s">tap</span> <span class="s">josegonzalez/homebrew-php</span>
</span><span class='line'><span class="s">brew</span> <span class="s">install</span> <span class="s">freetype</span> <span class="s">jpeg</span> <span class="s">libpng</span> <span class="s">gd</span> <span class="s">zlib</span> <span class="s">openssl</span> <span class="s">unixodbc</span>
</span><span class='line'><span class="s">brew</span> <span class="s">install</span> <span class="s">php55</span>
</span></code></pre></td></tr></table></div></figure>


<p>алиасы для динамической смены в комплекте ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Был обычный солничный день.]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/11/byl-obychnyi-solnichnyi-dien%27/"/>
    <updated>2014-04-11T00:14:15+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/11/byl-obychnyi-solnichnyi-dien&#8217;</id>
    <content type="html"><![CDATA[<p><img class="{{root_url}}" src="http://dutchakdev.github.io/images/heartbleed.png"></p>

<p><a href="http://heartbleed.com/">http://heartbleed.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Для любителей Happy Hardcore]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/11/dlia-liubitieliei-happy-hardcore/"/>
    <updated>2014-04-11T00:10:11+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/11/dlia-liubitieliei-happy-hardcore</id>
    <content type="html"><![CDATA[<p>Вкусный сет для работы</p>

<iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/137199203&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_artwork=true"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git-tips или не много о чистоте и безопасности]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/05/git-tips-ili-nie-mnogho-o-chistotie-i-biezopasnosti/"/>
    <updated>2014-04-05T00:14:10+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/05/git-tips-ili-nie-mnogho-o-chistotie-i-biezopasnosti</id>
    <content type="html"><![CDATA[<p><img src="http://dutchakdev.github.io/images/hipstercat.jpg"></p>

<p>Сегодня пересмотрел свои некоторые действия при работе с проектом и пришел к некоторым интересным вещам, а так-же подчеркнул для себя несколько важных методик, с которыми сейчас буду с вами делится.</p>

<!-- more -->


<ul>
<li><p>Ну вопервых, правило <strong>№1</strong> &ndash; <code>Сделал фичу - закомичу</code>. Странно, но я как-то этот момент все время упускаю, и после недавней практики когда мне нужно было
использовать замечательную фишу гита <strong>cherry-pick</strong> для разрешения одной проблемы, я понял что теперь все изменится. Так же главное что бы коментарий к комиту нес важную информацию, где у многих возникают проблемы на данном этапе, этого стоит избегать.</p></li>
<li><p>Если фича разрабатывается долгий период времени в отдельной ветке &ndash; почаще стягивайте себе мастер. Это можно сделать либо простым pull:
<code>git pull origin master</code>
либо merge
<code>git merge origin/master</code></p></li>
<li><p>Для мержа фичи в мастер используйте
<code>git merge --no-ff featureBranch</code>
Флаг <code>--no-ff</code> cоздает merge-коммит, даже если технически этого можно избежать. Merge-коммиты очень полезны, так как содержат важную информацию:</p>

<ul>
<li>коммиты, относящиеся к этой фиче, остаются сгруппированными</li>
<li>когда и кем было выполнено слияние</li>
<li>откуда пришли изменения (в нашем случае из ветки «featureBranch»)</li>
</ul>
</li>
<li><p>Для соблюдения порядка и наведения чистоты незабываем делать следующие вещи:</p>

<ul>
<li>Перед каждым пушем делайте: <code>git rebase -i @{u}</code>

<ul>
<li>Комманда переписывает только локальные коммиты, которые вы собираетесь запушить, хотя rebase&#8217;ом так же не стоит увлекатся</li>
</ul>
</li>
<li>Удаляйте не нужные ветки</li>
<li>Важно иметь схему именований новых веток. Как вариант использовать уникальные идентификаторы из баг-трекера, и делать что-то типа <code>feature-777</code> или <code>hotfix-123</code>. Одна задача &ndash; одна ветка.</li>
<li><code>git pull --rebase</code> вместо простого <code>git pull</code></li>
</ul>
</li>
<li><p>Очень важное правило: чем меньше вы используете &ldquo;полезных программ&rdquo; для работы с гитом &ndash; тем меньше у вас проблем. Ну и все таки, вам нужно то всего пару команд запомнить, стоит ли для этого ставить какой-то софт?</p>

<p>  Так-же важно понимать, что используя гит в консоли &ndash; <strong>ты начинаешь понимать внутренюю кухню</strong>, как все просиходит, что в будущем очень помагает с решениями достаточно сложных задач при работе в команде.</p></li>
<li><p>И последнее: <strong>Маленький мальчик пушил в мастер и помер</strong>.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Ninja Wanted]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/01/php-ninja-wanted/"/>
    <updated>2014-04-01T00:13:59+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/01/php-ninja-wanted</id>
    <content type="html"><![CDATA[<p>Мои друзья открыли вакансию <code>PHP Developer Senior / Middle</code>
<a href="http://jobs.dou.ua/companies/rioua/vacancies/11016/">Читать подробней</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing REE on Mac OS X]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/01/installing-ree-on-mac-os-x/"/>
    <updated>2014-04-01T00:12:32+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/01/installing-ree-on-mac-os-x</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">brew</span> <span class="s">install</span> <span class="s">readline</span>
</span><span class='line'><span class="s">brew</span> <span class="s">link</span> <span class="s">readline</span>
</span><span class='line'><span class="s">CFLAGS=&#39;-I/usr/local/include&#39;</span> <span class="s">LDFLAGS=&#39;-L/usr/local/lib&#39;</span> <span class="s">rvm</span> <span class="s">install</span> <span class="s">ree</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[О новых соц. сетях]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/01/o-novykh-sots-sietiakh/"/>
    <updated>2014-04-01T00:11:32+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/01/o-novykh-sots-sietiakh</id>
    <content type="html"><![CDATA[<h3>weua.info, ukrface.net, druzi.org.ua &ndash; это не реклама, потому как нечего рекламировать.</h3>

<p>Иногда поражает как люди любят зарабатывать на проблемах других людей.</p>

<!-- more -->


<p>Безсомненно, бойкот действует и не стоит поддерижвать окупанта, но для этого достаточно использовать <code>facebook</code>
ведь она подходит по всем стандартам:
&ndash; США не помагает и не будет помагать кремлю
&ndash; Есть все для удобного общения, в том числе моб приложения, моб версия и тд&hellip;
&ndash; Фейсбук почему-то не достаточно привлекателен для тролей, или просто это мне везет, хотя может они ним пользоваться не умеют.
&ndash; Многие гост. чиновники, знаменитые люди есть в фейсбуке, есть что почитать.</p>

<p>А &ldquo;этих&rdquo; есть только обещание что они не передадут ваши данные третим лицам когда простой ddos не могут удержать.</p>

<p>Используйте facebook, не страдайте херней.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NGINX + Nodjs]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/03/29/nginx-plus-nodjs/"/>
    <updated>2014-03-29T23:07:57+02:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/03/29/nginx-plus-nodjs</id>
    <content type="html"><![CDATA[<p>Вообще, nodjs отлично справляется в роли веб сервера, как показала практика то на ровне как минимум. Но иногда нужно или просто нет друго выбора (если 80 порт занят nginx) как использовать сторонний веб сервер.</p>

<!-- more -->


<p>Так как я адепт nginx и не признаю apache (не буду даже заводить разговор о своем выборе), то сделаю не большую заметку о том как проксировать, к примеру на <code>80</code> порт простенький сервер на <code>nodjs</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>  <span class="kn">server_name</span> <span class="s">domain</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>      <span class="kn">proxy_pass</span> <span class="s">http://localhost:8888/</span><span class="p">;</span>
</span><span class='line'>      <span class="kn">proxy_set_header</span> <span class="s">Host</span> <span class="nv">$host</span><span class="p">;</span>
</span><span class='line'>      <span class="kn">proxy_buffering</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;http&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">();</span>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8888</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>На самом деле ничего сложно и возможно я написал о очевидных вещах, но буквально год назад, когда я только знакомился с nodjs вопрос сплывал.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Первый пост]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/03/29/piervyi-post/"/>
    <updated>2014-03-29T23:04:08+02:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/03/29/piervyi-post</id>
    <content type="html"><![CDATA[<p>Сколько только я уже не создавал блогов) Не буду даже обещать что это последний, но все-же буду стараться его вести. За последнее время появилось много интересных мыслей, практик и просто идей которыми я непротив озвучить.
Рад буду если мои писюльки пригодятся кому-нибудь.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Автоматическая генерация кода в Yii]]></title>
    <link href="http://dutchakdev.github.io/blog/2013/08/25/crud-yii/"/>
    <updated>2013-08-25T17:18:33+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2013/08/25/crud-yii</id>
    <content type="html"><![CDATA[<p>Несколько лет назад я познакомился с замечательным фреймворком Yii и с тех пор как только у меня появляется возможность вести проект на нем — я <del>дерусь</del> берусь за нее.</p>

<!-- more -->


<p>Одной из крутых фич которую я очень люблю, это инструмент <code>Gii</code>, который начиная с версии 1.1.2 входит в состав фреймворка.
Сейчас я хочу поговорить сторонних модулях основанных на нем.</p>

<p><code>Gii</code> «Из коробки» генерирует достаточно функциональный код, часто когда нужно создать мелкую фичу приходится очень мало менять.
Но что если нам нужно больше возможностей? К примеру добавить поддержку нескольких языков, или изменит стиль генерируемого кода?</p>

<p>Есть 2 способа расширения: Изменять существующие шаблоны и создавать свои генераторы (ну или использовать уже готовые соответственно). На базе этих возможностей были созданы достаточно интересные продукты для комфортной работы с авто генерацией кода.</p>

<h3>Giix</h3>

<p><a href="http://www.yiiframework.com/extension/giix/">Страница расширения</a>
Пожалуй мой самый любимый генератор. Генерирует для моделей базовый класс с кодом и отдельно пустой класс модели с унаследованием от базового. Таким образом при изменении базы можно сделать пере-генерацию без затирания своего кода.</p>

<p>Также генерирует представление с учетом связей что очень часто экономит тонну времени.</p>

<p>Основные фичи</p>

<ul>
<li>Улучшенная и упрощенная i18n</li>
<li>Поддержка связей HAS_MANY и MANY_MANY.</li>
<li>Встроенная поддержка для сохранения связей MANY_MANY при помощи нового метода GxActiveRecord::saveWithRelated.</li>
<li>Правильная обработка связанных атрибутов моделей, рендеринг соответствующих полей формы основываясь на типе связей.</li>
<li>Удобная структура моделей для дальнейшей работы</li>
</ul>


<p>Практика показала что данный генератор, при правильно спроектированной бд генерирует очень много нужного кода.</p>

<h3>Manymanyajaxcrudadmin</h3>

<p><a href="http://www.yiiframework.com/extension/manymanyajaxcrudadmin/">Страница расширения</a>
Достаточно крутая штука. Предоставляет шаблон для генерации кода с использованием ajax в фронтенде для моделей со связками MANY_MANY. Удобно когда нужно создать сущность к примеру «продукт» или «категория».</p>

<p>К примеру для продукта мы используем обычный CListView или CGridView а для категорий можем использовать nestedset, редактируемые при помощи плагина jstree.</p>

<p>Все это дело редактируется в модальных диалогах, с возможностью прикреплять файлы.
Базируется на Giix.</p>

<p>Заключение</p>

<p>Моделей и наборов шаблонов для генерации намного больше, я описал лишь те которые приходилось использовать и которые мне действительно нравятся.
Идея форка для Giix не покидает меня, есть действительно хорошие идеи по-поводу данного расширения к примеру: добавить настройку типов полей перед генерацией, настройка правил, фильтров, возможно это стоит оформить как новый модуль для yii2. Время покажет.</p>

<p>Это моя первая статья, до этого я умел только троллить. За троллинг и оскорбления других пользователей, ранее, прошу прощения. Советы и критику по написанию статьи прошу писать в личку, с ошибками туда-же (мой Русский плох, я знаю, работаю над этим).</p>

<p>Ссылки:
<a href="http://www.yiiframework.com/extension/manymanyajaxcrudadmin/">manymanyajaxcrudadmin</a>
<a href="http://www.yiiframework.com/extension/giix/">giix</a>
<a href="http://www.yiiframework.com/doc/guide/1.1/ru/topics.gii">Автоматическая генерация кода в Yii</a></p>

<p>(Запись востановлена со старого блога)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MALMO простая структура вашего приложения YII]]></title>
    <link href="http://dutchakdev.github.io/blog/2013/03/26/malmo-prostaia-struktura-vashiegho-prilozhieniia-yii/"/>
    <updated>2013-03-26T16:10:05+02:00</updated>
    <id>http://dutchakdev.github.io/blog/2013/03/26/malmo-prostaia-struktura-vashiegho-prilozhieniia-yii</id>
    <content type="html"><![CDATA[<p>Прошу любить и жаловать MALMO. Еще один скилет для ваших приложений.
В отличии от bolierate он на много легче, но и работать с ним намного приятней.</p>

<!-- more -->


<p>Что уже есть внутри:</p>

<ul>
<li>Gearman worker для быстрого старата работы с gearman.</li>
<li>Database расширения:

<ul>
<li>DbConnection емуляци nested транзацкий MySql и други баз данных которые не поддерживают это.</li>
<li>DbCommand с фичами addWhere и queryAssoc</li>
<li>Base ActiveRecord class. Реализация часто используемых функций &ndash; автоматическая установа полей дат в записи, установка нулевого значения, а не пустой строки.</li>
</ul>
</li>
<li>Power MultiSite компонент для работы с мультисайтами.</li>
<li>Cookie Manager компонент для организации ваших кук в одном конфиге.</li>
<li>Base Controller с некоторыми вспомагательными методами, хелперами..</li>
<li>Tag Caching behaviour, включен по умолчанию</li>
<li>Unit tests для всех внутрених компонентов</li>
</ul>


<p>В целом штука крутая, только начал работать с ней, но мне уже нравится.
Сама репа тут: <a href="https://github.com/sergebezborodov/malmo">https://github.com/sergebezborodov/malmo</a>
Приложение на мелмо: <a href="https://github.com/sergebezborodov/malmo-app">https://github.com/sergebezborodov/malmo-app</a></p>

<p>(Запись востановлена со старого блога)</p>
]]></content>
  </entry>
  
</feed>

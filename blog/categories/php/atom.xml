<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Php | Dutchakdev]]></title>
  <link href="http://dutchakdev.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://dutchakdev.github.io/"/>
  <updated>2014-07-20T15:25:48+03:00</updated>
  <id>http://dutchakdev.github.io/</id>
  <author>
    <name><![CDATA[Roman Dutchak]]></name>
    <email><![CDATA[dutchakdev@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Пакетная обработка данных для AR YII]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/07/20/yii-batch/"/>
    <updated>2014-07-20T11:16:48+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/07/20/yii-batch</id>
    <content type="html"><![CDATA[<p>Хотел немного поиграться и посмотреть что выйдет. В yii2 есть такая крутая мега фича как batch и each.
Юзается они так:
```php
use yii\db\Query;</p>

<p>$query = (new Query)</p>

<pre><code>-&gt;from('tbl_user')
-&gt;orderBy('id');
</code></pre>

<p>foreach ($query->each() as $user) {</p>

<pre><code>// $user — одна строка из tbl_user
</code></pre>

<p>}</p>

<p>foreach ($query->batch(10) as $users) {</p>

<pre><code>// $users — массив из 10 строк
</code></pre>

<p>}
```</p>

<!-- more -->


<p>Конечно так красиво сделать не выйдет, да и вообще, не выйдет повторить всю суть,
без значительных изминений в AR (новый, для версии 2 команда yii писала 2 года)
но поигратся было интересно.</p>

<p>Посмотреть что получилось можно тут: <a href="https://github.com/dutchakdev/yii-batch">https://github.com/dutchakdev/yii-batch</a>
Репозиторий еще не дооформил, нужно написать пару тестов и пример использования
в демо проекте.</p>

<p>Сам компонент (хоть он и больше хелпер-итератор) находится тут
<a href="https://github.com/dutchakdev/yii-batch/blob/master/protected/components/Batch.php">https://github.com/dutchakdev/yii-batch/blob/master/protected/components/Batch.php</a></p>

<p>Вышло у мен так:</p>

<p>Batch:
```php</p>

<pre><code>// Вытягиваем по 10 штук из базы, когда мы их все проходим, догружаем еще 10
foreach((new \Batch(10, \user\models\User::model()))-&gt;findAll($criteria) as $item){
    // В $item находится 10 обьектов
}
</code></pre>

<p>```</p>

<p>Each:
```php</p>

<pre><code>// Вытягиваем по 10 штук из базы, когда мы их все проходим, догружаем еще 10 отдельным запросом
foreach((new \Batch(10, \user\models\User::model(), true))-&gt;findAll($criteria) as $item){
    // В $item находится 1 обьект
}
</code></pre>

<p>```</p>

<p>Штука работает довольно медленно за счет того что делает несколько запросов к базе, но память экономит значительно.
Сравнивая с обычным findAll из AR, который 3400 моих записей из реального проекта сожрал 94.5 mb в то время когда
batch держал уровен в районе 18.5-19.5 mb (учитывая что batchSize, размер пакета, был равен 100).</p>

<p>Если немного допилить AR для этих дел можно добится в уменьшения в раза два, но я пока не стал заморачиватся
так как интерес был не в том.</p>

<p>Заключение
Получилось не плохо, хоть и мало применимо. Для данных большого размера априори плохо юзать AR, в
yii2 ситуация улучшилась в разы (переключатель массив/обьект, перепиленый AR в котором гараздо удобней управлять данными).
Но иногда бывают ситуации когда можно себе позволить использовать обьект AR для выборки и в несколько запросов, к примеру отчетов или выгрузки
плоских таблиц. Во всяком случае это мой маленький эксперимент которым я хочу поделится.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yii 2.0 Beta]]></title>
    <link href="http://dutchakdev.github.io/blog/2014/04/14/yii2-beta/"/>
    <updated>2014-04-14T21:20:48+03:00</updated>
    <id>http://dutchakdev.github.io/blog/2014/04/14/yii2-beta</id>
    <content type="html"><![CDATA[<p>Свершилось! Появилась на свет beta второй вресии замечательного фреймворка Yii (Йии!)</p>

<p>Загрузить ее можно с <a href="http://www.yiiframework.com/download/">официального сайта фреймворка</a></p>

<!-- more -->


<h4>Часто задаваемые вопросы</h4>

<ul>
<li>Что значит бета? Бета означает стабильные набор возможностей и архитектуру. Начиная с беты и до GA (General Availability, стабильного релиза), мы будем заниматься, в основном, исправлением ошибок и документацией. Мы не собираемся изменять архитектуру фреймворка или добавлять какие-либо новые возможности. Стоит отметить, что поломки обратной совместимости всё ещё могут случаться, но мы попытаемся делать их как можно меньше, а сделанные детально описывать.</li>
<li>Когда будет стабильный релиз? Пока что мы не можем назвать точную дату. Так как следующий этап заключается, главным образом, в исправлении ошибок и доработке документации, мы думаем, что сильно много времени это не займёт.</li>
<li>Могу ли я использовать бету в моих проектах? Не стоит использовать бету в проектах с сжатыми сроками или если вы ещё не знакомы с Yii 2.0. Если это не про вас и вас не пугают изменения в фреймворке, можете попробовать. Мы слышали, что довольно много проектов уже запущены и работают на ветке <code>master</code>. Также помните, что минимальная версия PHP для работы фреймворка — 5.4.</li>
<li>Есть ли документация по 2.0? Да, есть The Definitive Guide и API documentation. Гайд постоянно дополняется. Перевод на русский будет как только оригинал будет более-менее завершён.</li>
<li>Как мне обновить приложения с 1.1 на 2.0? На эту тему написан отдельнй раздел</li>
<li>Upgrading from Yii 1.1. Стоит отметить, что так как 2.0 переписан полностью, обновление не будет тривиальной задачей. Тем не менее, если вы работали с 1.1, вам будет намного проще потому как между 1.1 и 2.0 много общего.</li>
<li>Как обновиться с альфы 2.0? Если вы обновляете альфу через Composer, стоит удалить всё, кроме .gitignore из директории vendor и запустить composer ещё раз. Сделать это необходимо лишь один раз и вам не придётся так поступать с каждым новым релизом. Полный список изменений, в том чисте и ломающих обратную совместимость, доступен в файле CHANGELOG.</li>
<li>Как следить за разработкой 2.0? Вся разработка и обсуждения происходят на GitHub:</li>
<li><a href="https://github.com/yiisoft/yii2.">https://github.com/yiisoft/yii2.</a> Вы можете подписаться на обновления или поставить звёздочку чтобы получать уведомления об обновлениях. Также можно следить за нашим twitter <a href="https://twitter.com/yiiframework.">https://twitter.com/yiiframework.</a></li>
</ul>


<p><a href="https://github.com/yiisoft/yii2/blob/master/framework/CHANGELOG.md">CHANGELOG</a></p>

<p>Еще с альфы успел поюзать его, скоро напишу подробный обзор фреймворка и свои впечатления.</p>

<p><a href="http://habrahabr.ru/post/219329/">Оригинал</a></p>
]]></content>
  </entry>
  
</feed>
